/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.meiresearch.android.plotprojects;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.KrollRuntime;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import org.appcelerator.titanium.TiApplication;

import java.util.Date;
import java.util.HashMap;


@Kroll.module(name="ComMeiresearchAndroidPlotprojects", id="com.meiresearch.android.plotprojects")
public final class ComMeiresearchAndroidPlotprojectsModule extends KrollModule
{
    @Kroll.getProperty
	public boolean getIsRunning()
	{
		return (LocationForegroundService.getInstance() != null);
	}

	// Standard Debugging variables
	// private static final String TAG = "ComMeiresearchAndroidPlotprojectsModule";

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
    //
	// public ComMeiresearchAndroidPlotprojectsModule()
	// {
	// 	super();
	// }

	// Methods
    @Kroll.method
	public boolean start()
	{
		return LocationForegroundService.start();
	}

	@Kroll.method
	public void initPlot() {
		LocationForegroundService.initPlot();
	}

	@Kroll.method
	public void enable() {
		LocationForegroundService.enable();
	}

	@Kroll.method
	public void disable() {
		LocationForegroundService.disable();
	}

	@Kroll.getProperty @Kroll.method
	public boolean getEnabled() {
		return LocationForegroundService.isEnabled();
	}

	@Kroll.getProperty @Kroll.method
	public String getVersion() {
		return LocationForegroundService.getVersion();
	}

	@Kroll.method
	public void mailDebugLog() {
		LocationForegroundService.mailDebugLog();
	}

//	@Kroll.method
//	public HashMap popFilterableNotifications() {
//		NotificationsAndId notificationsAndId = NotificationBatches.popBatch();
//
//		HashMap<String, Object> result = new HashMap<String, Object>();
//		result.put("filterId", notificationsAndId.getId());
//		result.put("notifications", JsonUtil.notificationsToMap(notificationsAndId.getNotifications()));
//		return result;
//	}

	@Kroll.method
	public void sendNotifications(HashMap batch) {
        LocationForegroundService.sendNotifications(batch);
	}

	@Kroll.method
	public HashMap popGeotriggers() {
        return LocationForegroundService.popGeotriggers();
	}

	@Kroll.method
	public void markGeotriggersHandled(HashMap batch) {
        LocationForegroundService.markGeotriggersHandled(batch);
	}

	@Kroll.method
	public void setStringSegmentationProperty(String property, String value) {
		LocationForegroundService.setStringSegmentationProperty(property, value);
	}

	@Kroll.method
	public void setBooleanSegmentationProperty(String property, boolean value) {
		LocationForegroundService.setBooleanSegmentationProperty(property, value);
	}

	@Kroll.method
	public void setIntegerSegmentationProperty(String property, int value) {
		LocationForegroundService.setIntegerSegmentationProperty(property, value);
	}

	@Kroll.method
	public void setDoubleSegmentationProperty(String property, double value) {
		LocationForegroundService.setDoubleSegmentationProperty(property, value);
	}

	@Kroll.method
	public void setDateSegmentationProperty(String property, Date value) {
		LocationForegroundService.setDateSegmentationProperty(property, value);
	}

	@Kroll.getProperty @Kroll.method
	public HashMap[] getLoadedNotifications() {
		return LocationForegroundService.getLoadedNotifications();
	}

	@Kroll.getProperty @Kroll.method
	public HashMap[] getLoadedGeotriggers() {
		return LocationForegroundService.getLoadedGeotriggers();
	}

	@Kroll.getProperty @Kroll.method
	public HashMap[] getSentNotifications() {
		return LocationForegroundService.getSentNotifications();
	}

	@Kroll.getProperty @Kroll.method
	public HashMap[] getSentGeotriggers() {
		return LocationForegroundService.getSentGeotriggers();
	}

	@Kroll.method
	public void clearSentNotifications() {
		LocationForegroundService.clearSentNotifications();
	}

	@Kroll.method
	public void clearSentGeotriggers() {
		LocationForegroundService.clearSentGeotriggers();
	}
}
